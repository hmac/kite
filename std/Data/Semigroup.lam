module Data.Semigroup

import Lam.Semigroup (Semigroup(..))
import Data.NonEmpty (NonEmpty)

instance Semigroup Int where
  append x y = x + y

fold : Semigroup a => a -> [a] -> a
fold x [] = x
fold x (y :: ys) = append x (fold y ys)

concat : Semigroup a => NonEmpty a -> a
concat (NonEmpty x xs) = fold x xs
