module IOTest

import Lam.String (semigroupString)
import Data.Semigroup (append)
import Data.Function (const)
import Data.Functor (map)
import Data.List (functorList)
import Data.Monad (bind, sequence)
import Data.Monoid (concat)
import IO (getLine, putLine, monadIO)
import Data.String (chars, fromChars)
import Lam.String (monoidString)

makeGreeting : String -> String
makeGreeting name = append semigroupString "Hello, " name

greet : String -> IO ()
greet name = putLine (makeGreeting name)

main : IO ()
main = sequence monadIO (putLine "What is your name?") (bind monadIO getLine greet)
