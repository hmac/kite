module T5

test : Int { append semigroupInt 2 2 }

type Semigroup a { Semigroup [ append : a -> a -> a ] }

append : Semigroup a -> a -> a -> a { match {
Semigroup d -> d.append
}}

type Foo { Foo Int }

appendInt : Int -> Int -> Int { match {
x, y -> x + y
}}

semigroupInt : Semigroup Int { Semigroup [ append: appendInt ] }
