module Tiny

data Bool = True | False

data Maybe a = Just a | Nothing

isJust : Maybe a -> Bool
isJust (Just _) = True
isJust _ = False

mapMaybe : (a -> b) -> Maybe a -> Maybe b
mapMaybe f Nothing = Nothing
mapMaybe f (Just x) = Just (f x)

not : Bool -> Bool
not True = False
not False = True

bindMaybe : Maybe a -> (a -> Maybe b) -> Maybe b
bindMaybe Nothing _ = Nothing
bindMaybe (Just x) f = f x

head : [a] -> Maybe a
head [] = Nothing
head (x :: _) = Just x

length : [a] -> Int
length [] = 0
length (x :: xs) = 1 + (length xs)

main : Int
main = length [True, False]
