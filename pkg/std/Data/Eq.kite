module Data.Eq

type Eq a = Eq { eq : a -> a -> Bool }

eq : Eq a -> a -> a -> Bool
eq = (Eq d) -> d.eq

notEq : Eq a -> a -> a -> Bool
notEq = e x -> not . eq e x

-- Data.Bool imports this module, so we can't import Data.Bool.not.
-- Instead we define it again here.
not : Bool -> Bool
not = True -> False
      False -> True
